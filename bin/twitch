#!/usr/bin/env ruby

require 'shellwords'
require 'pathname'

RC_FILE = Pathname.new(Dir.home).join(".twitchrc")
TOKEN_FILE = Pathname.new(Dir.home).join(".twitch_token")
HIST_FILE = Pathname.new(Dir.home).join(".twitch_history")

def twitch_token
  ENV["TWITCH_TOKEN"] ||= if TOKEN_FILE.exist?
    TOKEN_FILE.read
  else
    $stdout.print "Please enter your twitch oauth token: "
    $stdout.flush
    $stdin.gets.tap do |token|
      $stdout.puts "Saving token to #{TOKEN_FILE}."
      TOKEN_FILE.write token
    end
  end.chomp
end

options = {
  chat: true,
  stream: true,
  quiet: false,
  quality: [
    "source",
    "best",
    "1080p",
    "1080p60",
    "1080p30",
    "720p",
    "720p60",
    "720p30",
    "540p",
    "540p60",
    "540p30",
    "480p",
    "480p60",
    "480p30",
    "144p"
  ].join(",")
}
stream = nil
livestreamer_options = []
cmd = ARGV.shift
loop do
  case cmd
  when "--no-chat", "-C"
    options[:chat] = false
  when "--no-stream", "-S"
    options[:stream] = false
  when "--quality", "-q", /^(?:-q|--quality=)(.+)$/
    options[:quality] = $1 || ARGV.shift
  when "--quiet", "-Q"
    options[:quiet] = true
    livestreamer_options << "-Q"
  when nil
    if stream.nil?
      $stderr.puts "no stream provided."
      exit 1
    end
    channel = "https://www.twitch.tv/#{stream}"
    cmd = [
      "livestreamer",
      "--twitch-oauth-token",
      twitch_token,
      "--stream-segment-threads",
      5,
      *livestreamer_options,
      channel,
      options[:quality]
    ].shelljoin
    $stdout.puts "Opening #{channel}" unless options[:quiet]
    system ["open", "#{channel.downcase}/chat"].shelljoin if options[:chat]
    $stdout.puts cmd.sub(twitch_token, "*****") unless options[:quiet]
    exec(cmd) if options[:stream]
    break
  when "--"
    livestreamer_options.push *ARGV
    ARGV.clear
  else
    stream = cmd
  end
  cmd = ARGV.shift
end
